apiVersion: v1
kind: ConfigMap
metadata:
  name: user-service
data:
  application.yaml: |-
    logging:
      level:
        root: info
        es.davidmoros.poc: info      
      file:
        name: /tmp/application.log  
    management:
      endpoints:
        web:
          exposure:
            include: "*"
      endpoint:
        health:
          show-details: ALWAYS        
        logfile:
          external-file: /tmp/application.log
    resilience4j.circuitbreaker:
      instances:
          serieCB:
              registerHealthIndicator: true
              slidingWindowSize: 10
              permittedNumberOfCallsInHalfOpenState: 3
              slidingWindowType: TIME_BASED
              minimumNumberOfCalls: 4
              waitDurationInOpenState: 5s
              failureRateThreshold: 50
              eventConsumerBufferSize: 10
          filmCB:
              registerHealthIndicator: true
              slidingWindowSize: 10
              permittedNumberOfCallsInHalfOpenState: 3
              slidingWindowType: TIME_BASED
              minimumNumberOfCalls: 4
              waitDurationInOpenState: 5s
              failureRateThreshold: 50
              eventConsumerBufferSize: 10
          allCB:
              registerHealthIndicator: true
              slidingWindowSize: 10
              permittedNumberOfCallsInHalfOpenState: 3
              slidingWindowType: TIME_BASED
              minimumNumberOfCalls: 4
              waitDurationInOpenState: 5s
              failureRateThreshold: 50
              eventConsumerBufferSize: 10            
    server:
      port: ${PORT:0}
    spring:
      zipkin:
        baseUrl: http://zipkin.zipkin:9411

---

apiVersion: v1
kind: Service
metadata:
  name: user-service
  labels:
    spring-boot-admin: "true"
spec:
  selector:
    app: user-service
  ports: 
    - name: user-port
      port: 8080
  
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
        metrics: "on"
    spec:
      containers:
      - name: user-service
        image: user-service
        imagePullPolicy: Never
        env:
        - name: PORT
          value: "8080"
        ports:
        - name: user-port
          containerPort: 8080        