apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: prometheus
  labels:
    spring-boot-admin: "true"
spec:
  selector:
    app: prometheus
  type: NodePort
  ports: 
    - name: default-port
      port: 9090
      targetPort: 9090
      nodePort: 30990

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
  namespace: prometheus
data:
  prometheus.yml: |-
    global:
      scrape_interval:     5s # El intervalo en el que se traerá las métricas
      evaluation_interval: 15s # Evaluará las reglas cada 15 segundos, por defecto es cada minuto
    rule_files:
    scrape_configs:
      - job_name: 'spring-actuator'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_metrics]
            regex: on
            action: keep
        metrics_path: '/actuator/prometheus'
        basic_auth:
          username: 'admin'
          password: 's3cr3t'
      - job_name: 'zipkin'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            regex: zipkin
            action: keep
        metrics_path: '/actuator/prometheus'         
      - job_name: kubernetes
        scrape_interval: 10s
        scrape_timeout: 10s
        scheme: https  # remove if you want to scrape metrics on insecure port
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          # Only for Kubernetes ^1.7.3.
          # See: https://github.com/prometheus/prometheus/issues/2916
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
        metric_relabel_configs:
          - action: replace
            source_labels: [id]
            regex: '^/machine\.slice/machine-rkt\\x2d([^\\]+)\\.+/([^/]+)\.service$'
            target_label: rkt_container_name
            replacement: '${2}-${1}'
          - action: replace
            source_labels: [id]
            regex: '^/system\.slice/(.+)\.service$'
            target_label: systemd_service_name
            replacement: '${1}'

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: prometheus
  labels:
    app: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus     
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus
        env:
        - name: config.file
          value: /etc/prometheus/prometheus.yml
        ports:
        - name: default-port
          containerPort: 9090
        volumeMounts:
          - name: config-prometheus
            mountPath: /etc/prometheus
            readOnly: true
      volumes:
        - name: config-prometheus
          configMap:
            name: prometheus